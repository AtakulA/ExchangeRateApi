// <auto-generated />
using System;
using ExchangeService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExchangeService.Data.Migrations
{
    [DbContext(typeof(ExchangeRatesDbContext))]
    [Migration("20230514141408_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExchangeService.Data.ExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AcquiredAt")
                        .HasColumnType("DateTime");

                    b.Property<DateTime>("ExpiresAt")
                        .HasColumnType("DateTime");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<decimal>("Rate")
                        .HasColumnType("money");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.ToTable("ExchangeRates", (string)null);
                });

            modelBuilder.Entity("ExchangeService.Data.ExchangeTrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ExchangeRateId")
                        .HasColumnType("int");

                    b.Property<decimal>("ExchangedAmount")
                        .HasColumnType("money");

                    b.Property<DateTime>("ExchangedAt")
                        .HasColumnType("DateTime");

                    b.Property<decimal>("UserAmount")
                        .HasColumnType("money");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ExchangeRateId");

                    b.ToTable("ExchangeTrades", (string)null);
                });

            modelBuilder.Entity("ExchangeService.Data.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Exception")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Logged")
                        .HasColumnType("DateTime");

                    b.Property<string>("Logger")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MachineName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Logs", (string)null);
                });

            modelBuilder.Entity("ExchangeService.Data.ExchangeTrade", b =>
                {
                    b.HasOne("ExchangeService.Data.ExchangeRate", "ExchangeRate")
                        .WithMany("ExchangeTrades")
                        .HasForeignKey("ExchangeRateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExchangeRate");
                });

            modelBuilder.Entity("ExchangeService.Data.ExchangeRate", b =>
                {
                    b.Navigation("ExchangeTrades");
                });
#pragma warning restore 612, 618
        }
    }
}
